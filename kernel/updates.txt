2/14/2015		最后查出来发现是GUI_refresh_block出现问题了，重写了一份，解决问题！
2/14/2015		rise和lab Explorer一起设计完成了窗口的拖动，但是当窗口的x或者y坐标小于等于0时，会出现严重问题(撕裂问题)。

2/14/2015		在鼠标按下去时，会得到命令0x09，一般不会重复得到0x09，但是在鼠标拖动的时候，会出现新的0x09信息。
			因此在window.c中增加了按键按压变量，当按压的时候，可以判断是否有重复的按压命令，并将重复的命令过滤掉。

2/14/2015		今天在活动窗口中增加了一个判断，判断要变成活动窗口的窗口，是否处于所有窗口之上，
			如果未成为所有窗口之上，则移动到最上部分，并且对活动窗口的图层部分全部刷新一遍(实际应当把主界面刷新)。

2/13/2015		今天将Explorer的传统shell替换成了rise的shell，功能更加轻便，但更完美！

2/13/2015		Lab Explorer<2322869088@qq.com>目前正在改装rise的make.cmd，放到Ghost Bird OS Application Development中。

2/13/2015		将rise的编译系统中的pcc.cmd、p++.cmd、asm.cmd的位置挪到了tools里面，
			具体原因是需要将rise的make.cmd应用在Ghost Bird OS Application Development中，这样可以通用。

10/3/2014		完成了大体内存池结构的设计，在arch/x86/kernel/kmalloc.c中，里面有详细的注视

9/20/2014		今天用C语言做了printk函数，在shell.c中。版权信息从rose那里继承来，得到改善。

9/8/2014		今天完成了x86架构的cpu型号检测，由于没有多个样机进行测试，所以仅仅支持了
			我的酷睿i5 2550K。

9/6/2014		今天将CPU检测的汇编代码变成内嵌的了，这样可以发挥C的优势，
			对处理器型号的检测更容易。

8/30/2014		上学前的最后一天了，今天干的东西或许不错：
			将memory management部分、shell部分给移动到了arch里面

			定时器设定定时函数完成了，现在可以调用settimer(函数指针, 时间长度, 属性);函数
			创建定时器，属性不为0时仅仅计时一次，属性为0时隔 时间长度 触发一次。

			CPU信息检查部分的框架已经建立，在arch/x86/kernel/cpu.asm，还检查了3个信息：
			CPU OME信息，CPUID最大basic支持页、最大extended支持页都获取了，只可惜时间不够，
			下次还要实现MMX、SSE等指令集兼容情况的检测、处理器家族信息的检测、APIC的检测等
			高大上的信息。

8/11/2014		迷彩红星 看来，原来要做出遵循POSIX标准的进程、线程接口是短期不会实现的了:-(
			所以在今天我决定对进程部分重新设计。



			以后为了更容易寻找bug，任何参与开发Explorer内核的人应当在各种关键地方加以
			调试代码，且用宏开启\关闭调试功能。




小经验		 在网上看到还有个细节问题就是，fork之后内核会通过将子进程放在队列的前面，
以让子进程先执行，以免父进程执行导致写时复制，而后子进程执行exec系统调用，
因无意义的复制而造成效率的下降。



8/5/2014		迷彩红星 做好了进程复制，但没有加入页目录表复制(写时复制技术)，
而且复制后的子进程不能返回复制进程代码所在函数的上个函数，其他的一切正常。
稍晚些时候会完成页目录表复制、写时复制、线程创建等。



8/2/2014 12:07 PM	修订了FAT32中的一个BUG，这个BUG会导致包含多个扇区的簇的FAT32分区
在读写时会出现故障.



8/1/2014 11:00 AM	迷彩红星 做好了中断系统。



7/26/2014 7:30 PM	迷彩红星 将HAL/x86/fun_asm.asm中的IO函数给分离出来。



7/24/2014 10:18 PM	迷彩红星 将之前 Ghost Bird OS 技术验证代码copy到了
Docs/history/Ghost Bird OS 技术验证阶段/下。



7/24/2014 2:34 PM	迷彩红星 经过几天的努力，完成了FAT32的支持代码，读取了一个文本文件。
之后又发现了bug:-(，最终，成功的加载了一个图片:-)，在Docs/history/FAT32的C语言支持代码完成/
下有成品。



7/22/2014 12:30	PM	迷彩红星 发现，有的文件和目录在Ubuntu的使用后，
在Win32下会发生名字乱码、打不开等问题，加上传送效率问题，今后的代码最好以单个文件的形式更新。



7/22/2014 11:50	PM	经过 BeatMicrosoft 和 米油 两位的共同努力，
Explorer 0.01 内核终于能够在Linux下一键从编译到虚拟机运行了。



Updates log:记录下任何开发时出现的问题，便于分享经验及防范bug。